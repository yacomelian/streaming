#user  nobody;
worker_processes  auto;

error_log       /var/log/nginx/error.log;
error_log       /var/log/nginx/notice.log  notice;
#error_log  /var/log/nginx/info.log  info;

#pid        logs/nginx.pid;

daemon          off;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
                autoindex on;
        }

        location /stat {
            rtmp_stat all;
            # Use this stylesheet to view XML as web page
            # in browser
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            # XML stylesheet to view RTMP stats.
            # Copy stat.xsl wherever you want
            # and put the full directory path here
            root /var/www/HLS;
        }
	location media_server {
	  types {
               application/vnd.apple.mpegurl m3u8;
               video/mp2t ts;
           }
           root /tmp;
           add_header Cache-Control no-cache;
	}

	

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

	location /hls {
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
        }

        location /dash {
            # Serve DASH fragments
            root /tmp;
            add_header Cache-Control no-cache;
        }
    }

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}

rtmp    {
        server  {
                listen 1935;
                chunk_size 4000;

		application live {
			live on;
#                        record off;

			# record first 5M of stream
			record all;
			record_path /tmp/av;
			record_max_size 5M;

			# append current timestamp to each flv
			record_unique on;

			# n image or a repository from a reg                       push rtmp://localhost/HLSstream1/;
			#pull rtmp://localhost/big/;
			#                       exec ffmpeg -i rtmp://localhost/live/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 350K -s 640x360 -f flv -c:a aac -ac 1 -strict -2 -b:a 56k rtmp://localhost/live360p/$name;
			allow play all;
#			allow publish 10.1.10.0
		}

		application big {
			live on;
			exec /usr/bin/ffmpeg -re -i rtmp://localhost:1935/$app/$name -vcodec flv -acodec copy -s 32x32 -f flv rtmp://localhost:1935/low/${name};  
			allow play all;
			allow publish 127.0.0.1;
			deny publish all;

		}
		application low {
			live on;
			allow play all;
			allow publish 127.0.0.1;
			deny publish all;
		}
		application hls {
			live on;
			hls on;
			hls_path /tmp/hls;
		}
		# MPEG-DASH is similar to HLS
		application dash {
			live on;
			dash on;
			dash_path /tmp/dash;
		}

		application media_server {
			live on;
	           hls on;
	           hls_path /tmp/media_server;
	           hls_nested on;
	           hls_variant _low  BANDWIDTH=640000;
	           hls_variant _hi  BANDWIDTH=2140000;
        	   # ffmpeg static execution
	           exec_static /usr/local/bin/ffmpeg -i SOURCE
	               -c:v libx264 -g 50 -preset fast -b:v 4096k -c:a libfdk_aac -ar 44100 -f flv rtmp://127.0.0.1/media_server/stream_hi
        	       -c:v libx264 -g 50 -preset fast -b:v 1024k -c:a libfdk_aac -ar 44100 -f flv rtmp://127.0.0.1/media_server/stream_low;
		}
	}
}
